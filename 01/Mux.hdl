// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/** 
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
    // Put your code here:
    // Not(in=sel, out=notSel);

    // And(a=b, b=sel, out=bASel);
    // And(a=a, b=notSel, out=aAnotSel);
    // And(a=a, b=b, out=aAndB);
    
    // Or(a=bASel, b=aAnotSel, out=outOr);
    // Or(a=outOr, b=aAndB, out=out);

    // there is an optimisation with 1 less nand gate but idk how to do simply this exp
    // A.B + B.S + A.S'
    Nand(a=b, b=b, out=notB);
    Nand(a=notB, b=sel, out=nBNandS);
    Nand(a=a, b=nBNandS, out=nandOutput1);
    Nand(a=sel, b=b, out=bNandS);
    Nand(a=nandOutput1, b=bNandS, out=out);
    
}